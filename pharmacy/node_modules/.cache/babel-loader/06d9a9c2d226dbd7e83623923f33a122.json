{"ast":null,"code":"import * as api from '../api/index.js';\nimport { actionType } from '../constants/constants.js';\nexport const login = inputData => api.logIn(inputData);\nexport const signup = inputData => api.signUp(inputData);\nexport const verifyUserAction = () => {\n  return api.verifyUser();\n}; // export const otpVerificationAction = ( userData , router ) => async (dispatch) => {\n//   try{\n//     dispatch({ type: actionType.LOADING_DATA });\n//     const {data} = await api.otpVerification(userData);\n//     dispatch({ type: actionType.OTP_VERIFY , data });\n//   }catch (error) {\n//     const err = {...error.response.data, error : true}\n//     dispatch({ type : actionType.ERROR , data : err})\n//   }\n// }\n// export const forgotPasswordAction = (userData) => async (dispatch) => {\n//   try{\n//     dispatch({ type: actionType.LOADING_DATA });\n//     const {data} = await api.forgotPassword(userData);\n//     dispatch({ type: actionType.FORGOT_PASSWORD , data });\n//   }catch (error) {\n//     const err = {...error.response.data, error : true}\n//     dispatch({ type : actionType.ERROR , data : err})\n//   }\n// }\n// export const forgotPasswordOtpAction = (userData) => async (dispatch) => {\n//   try{\n//     dispatch({ type: actionType.LOADING_DATA });\n//     const {data} = await api.forgotPasswordOtp(userData);\n//     dispatch({ type: actionType.FORGOT_PASS_OTP , data });\n//   }catch (error) {\n//     console.log(userData)\n//     const err = {...error.response.data, error : true}\n//     dispatch({ type : actionType.ERROR , data : err})\n//   }\n// }\n// export const forgotChangePasswordAction = (userData) => async (dispatch) => {\n//   try{\n//     dispatch({ type: actionType.LOADING_DATA });\n//     const {data} = await api.forgotChangePassword(userData);\n//     console.log(data)\n//     dispatch({ type: actionType.FORGOT_CHANGE_PASS , data });\n//   }catch (error) {\n//     const err = {...error.response.data, error : true}\n//     dispatch({ type : actionType.ERROR , data : err})\n//   }\n// }\n// export const logOutAction = (router)=> async (dispatch) => {\n//   console.log(\"LOGOUT\")\n//   try{\n//     const {data} = await api.logOut();\n//     router.push('/')\n//   }catch (error) {\n//     console.log(error)\n//   }\n// }\n// export const useReferralAction = (userData,router) => async (dispatch) =>{\n//   console.log(userData)\n//   try {\n//       dispatch({ type: actionType.LOAD_USE_REFERRAL });\n//       const { data } = await api.referral(userData);\n//       dispatch({ type: actionType.USE_REFERRAL , payload: data});\n//       if( data.verify ) router.push('/home')\n//       else dispatch({ type : actionType.ERROR , payload : data, error: true})\n//   }\n//   catch(err){\n//       console.log(err,err.response)\n//       dispatch({ type : actionType.ERROR , data : err.response ? err.response.data : err})\n//   }\n// }\n// export const verifyUserAction = () => {\n//   return api.verifyUser();\n// }","map":{"version":3,"sources":["/home/krishna/Desktop/projects/DBMS/YourPharmacy/pharmacy/src/actions/Authentication.js"],"names":["api","actionType","login","inputData","logIn","signup","signUp","verifyUserAction","verifyUser"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,iBAArB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AAEA,OAAO,MAAMC,KAAK,GAAIC,SAAD,IAAeH,GAAG,CAACI,KAAJ,CAAUD,SAAV,CAA7B;AAEP,OAAO,MAAME,MAAM,GAAIF,SAAD,IAAeH,GAAG,CAACM,MAAJ,CAAWH,SAAX,CAA9B;AAEP,OAAO,MAAMI,gBAAgB,GAAG,MAAM;AACpC,SAAOP,GAAG,CAACQ,UAAJ,EAAP;AACD,CAFM,C,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import * as api from '../api/index.js';\nimport {actionType} from '../constants/constants.js';\n\nexport const login = (inputData) => api.logIn(inputData);\n  \nexport const signup = (inputData) => api.signUp(inputData);\n\nexport const verifyUserAction = () => {\n  return api.verifyUser();\n}\n\n// export const otpVerificationAction = ( userData , router ) => async (dispatch) => {\n//   try{\n//     dispatch({ type: actionType.LOADING_DATA });\n//     const {data} = await api.otpVerification(userData);\n//     dispatch({ type: actionType.OTP_VERIFY , data });\n//   }catch (error) {\n//     const err = {...error.response.data, error : true}\n//     dispatch({ type : actionType.ERROR , data : err})\n//   }\n// }\n\n// export const forgotPasswordAction = (userData) => async (dispatch) => {\n//   try{\n//     dispatch({ type: actionType.LOADING_DATA });\n//     const {data} = await api.forgotPassword(userData);\n//     dispatch({ type: actionType.FORGOT_PASSWORD , data });\n//   }catch (error) {\n//     const err = {...error.response.data, error : true}\n//     dispatch({ type : actionType.ERROR , data : err})\n//   }\n// }\n\n// export const forgotPasswordOtpAction = (userData) => async (dispatch) => {\n//   try{\n//     dispatch({ type: actionType.LOADING_DATA });\n//     const {data} = await api.forgotPasswordOtp(userData);\n//     dispatch({ type: actionType.FORGOT_PASS_OTP , data });\n//   }catch (error) {\n//     console.log(userData)\n//     const err = {...error.response.data, error : true}\n//     dispatch({ type : actionType.ERROR , data : err})\n//   }\n// }\n\n// export const forgotChangePasswordAction = (userData) => async (dispatch) => {\n\n//   try{\n//     dispatch({ type: actionType.LOADING_DATA });\n//     const {data} = await api.forgotChangePassword(userData);\n//     console.log(data)\n//     dispatch({ type: actionType.FORGOT_CHANGE_PASS , data });\n//   }catch (error) {\n//     const err = {...error.response.data, error : true}\n//     dispatch({ type : actionType.ERROR , data : err})\n//   }\n// }\n\n// export const logOutAction = (router)=> async (dispatch) => {\n//   console.log(\"LOGOUT\")\n//   try{\n//     const {data} = await api.logOut();\n//     router.push('/')\n//   }catch (error) {\n//     console.log(error)\n//   }\n// }\n\n\n// export const useReferralAction = (userData,router) => async (dispatch) =>{\n//   console.log(userData)\n//   try {\n//       dispatch({ type: actionType.LOAD_USE_REFERRAL });\n//       const { data } = await api.referral(userData);\n//       dispatch({ type: actionType.USE_REFERRAL , payload: data});\n//       if( data.verify ) router.push('/home')\n//       else dispatch({ type : actionType.ERROR , payload : data, error: true})\n//   }\n//   catch(err){\n//       console.log(err,err.response)\n//       dispatch({ type : actionType.ERROR , data : err.response ? err.response.data : err})\n//   }\n// }\n\n// export const verifyUserAction = () => {\n//   return api.verifyUser();\n// }"]},"metadata":{},"sourceType":"module"}